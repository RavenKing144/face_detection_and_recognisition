# -*- coding: utf-8 -*-
"""face_recognistion_using_knn.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fX1QOKR6G7t7g04xr3KxMOEKokPsMjoI
"""

import numpy as np
import pandas as pd
from matplotlib import pyplot as plt
import cv2 as cv
import os

"""finding ecuilidean distance"""

def distance(x1,x2):
  return np.sqrt(sum(x1-x2)**2)

"""finding knn"""

def knn(train, test, k=10):
  m = train.shape[0]
  val = []
  for i in range(m):
    ix = train[i, :-1]
    iy = train[i, -1]
    d = distance(test,ix)
    val.append([d,iy])
  val = sorted(val, key = lambda x:x[0])[:k+1]
  label = np.array(val)[:,-1]
  output = np.unique(label, return_counts = True)
  index = np.argmax(output[1])
  return output[0][index]

"""Data preprocessing"""

face_cascade = cv.CascadeClassifier('haarcascade_frontalface_alt.xml')
skip  =0
path ='./data/'
face_data = []
lables = []
class_id = 0
name = {}
for fx in os.listdir(path):
  if fx.endswith('.npy'):
    name[class_id] = fx[:-4]
    data_item = np.load(path+fx)
    face_data.append(data_item)
    target = class_id*np.ones((data_item.shape[0],))
    class_id+=1
    lables.append(target)
face_dataset = np.concatenate(face_data, axis=0)
face_label = np.concatenate(lables, axis=0).reshape((-1,1))
train = np.concatenate((face_dataset,face_label), axis = 1)

"""video streaming"""

cam = cv.VideoCapture(0)
while True:
  ret, frame = cam.read()
  if ret == False:
    continue
  faces = face_cascade.detectMultiScale(frame, 1.3,5)
  for face in faces:
    x,y,w,h = face
    offset = 10
    face_section = frame[y-offset:y+h+1+offset, x-offset:x+w+1+offset]
    face_section = cv.resize(face_section,(100,100))
    output = knn(train, face_section.flatten())
    cv.putText(frame, name[int(output)], (x,y-10), cv.FONT_HERSHEY_SIMPLEX, 1, (255,0,0), 2, cv.LINE_AA)
    cv.rectangle(frame,(x,y),(x+w,y+h),(0,255,255),2)
  cv.imshow("Faces", frame)
  key_pressed = cv.waitKey(1) & 0xFF
  if key_pressed == ord('q'):
    break
cam.release()
cv.destroyAllWindows()
